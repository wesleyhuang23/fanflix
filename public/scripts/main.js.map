{"version":3,"sources":["animation.js","flix.js","mainCtrl.js","mainSvc.js","credits/creditsCtrl.js","details/detailsCtrl.js","login/loginCtrl.js","edit/editCtrl.js","mylist/mylistCtrl.js","people/peopleCtrl.js","search/searchCtrl.js","theater/theaterCtrl.js","user/favoritesCard.js","user/userCtrl.js","user/watchedCard.js","user/watchlistCard.js","userReviews/userReviewsCtrl.js"],"names":[],"mappingsjxpQA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbtLA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["$(document).ready(function(){\n  // $(this).scrollTop(0);\n  var poster = document.getElementsByClassName('poster');\n\n  $('.overview-wrapper').click(function(){\n  });\n\n  $('.slick-next').click(function(){\n    $('#now-playing').animate({marginLeft: \"-=500px\"}, \"fast\");\n  });\n\n  // $('.search img').on('click', function(){\n  //   $('input').val(\"\");\n  // });\n\n  $('.search input').keyup(function(){\n    $('.search img').click();\n  });\n  $('.search-mobile input').keyup(function(){\n    $('.search-mobile img').click();\n  });\n\n//   $(\"#showtime-search\").keyup(function(event){\n//     if(event.keyCode == 13){\n//         $(\".showtime-input img\").click();\n//     }\n// });\n\n  $('.search-content').on('click', function(){\n    $('#input-search input[type=\"text\"]').val(\" \");\n  });\n\n  $('.search img').click(function(){\n    if($('input').val().length === 0){\n      $('.search-wrapper').hide();\n    } else {\n        $('.search-wrapper').show();\n      }\n  });\n\n  $('#left-now-playing').click(function(){\n    $('#now-playing').css({'margin-left' : '-1590px'});\n  });\n  $('#right-now-playing').click(function() {\n    $('#now-playing').removeAttr('style');\n  })\n\n});\n\n// function initMap() {\n//         var uluru = {lat: -25.363, lng: 131.044};\n//         var map = new google.maps.Map(document.getElementById('map'), {\n//           zoom: 4,\n//           center: uluru\n//         });\n//         var marker = new google.maps.Marker({\n//           position: uluru,\n//           map: map\n//         });\n//       }\n","angular.module('flixApp', [\n  'ui.router', \n  'watchlistCardDirective',\n  'watchedCardDirective',\n  'favoritesCardDirective',\n  'ngMessages'\n  ])\n\n.config(function($urlRouterProvider, $stateProvider){\n\n  $stateProvider\n  .state('home', {\n    templateUrl: 'views/home.html',\n    url: '/'\n  }).state('details', {\n    templateUrl: 'views/details.html',\n    url: '/movie/:id',\n    controller: 'detailsCtrl'\n  }).state('search', {\n    templateUrl: 'views/search.html',\n    url: '/search',\n    controller: 'searchCtrl'\n  }).state('mylist', {\n    templateUrl: 'views/mylist.html',\n    url: '/mylist'\n  }).state('reviews', {\n    templateUrl: 'views/reviews.html',\n    url: '/reviews'\n  }).state('edit', {\n    templateUrl: 'views/edit.html',\n    url: '/edit/:id',\n    controller: 'editCtrl'\n  }).state('login', {\n    templateUrl: 'views/login.html',\n    url: '/login',\n    controller: 'loginCtrl'\n  }).state('people', {\n    templateUrl: 'views/people.html',\n    url: '/people/:id',\n    controller: 'peopleCtrl'\n  }).state('user_review', {\n    templateUrl: 'views/user_reviews.html',\n    url: '/user_reviews/:id',\n    controller: 'userReviewsCtrl'\n  }).state('credits',  {\n    templateUrl: 'views/credits.html',\n    url: '/credits/:id',\n    controller: 'creditsCtrl'\n  }).state('theater', {\n    templateUrl: 'views/theater.html',\n    url: '/theater/:id',\n    controller: 'theaterCtrl'\n  }).state('user', {\n    templateUrl: 'views/user.html',\n    url: '/user/:id',\n    controller: 'userCtrl'\n  });\n\n\n  $urlRouterProvider.otherwise('/');\n});\n","angular.module('flixApp').controller('mainCtrl', function($scope, mainSvc){\n  $scope.colorPicker = function(rating){\n    if(rating >= 7){\n      return 'green';\n    }\n    else if(rating >= 4){\n      return 'orange';\n    }\n    else if(rating >= 0){\n      return 'red';\n    }\n  }\n\n  var id = {}\n  var imdb_id = {}\n\n  $scope.getPopular = () => {\n    mainSvc.getPopular().then(response => {\n      // console.log($scope.populars);\n\n      $scope.popular = response[0];\n      var result = []\n      for(var i = 0; i < 7; i++){\n        result.push(response[i]);\n      }\n      $scope.populars = response;\n      // console.log($scope.popular);\n\n      id.id = response[0].id;\n        // console.log(id);\n          $scope.getPopularDetails(id);\n    });\n  }\n\n  $scope.getPopularDetails = id => {\n    mainSvc.getPopularDetails(id).then(response => {\n      $scope.popularDetail = response;\n      // console.log('popDeets', $scope.popularDetail);\n      $scope.companies = response.production_companies;\n      imdb_id.id = response.imdb_id;\n      // console.log(imdb_id);\n      $scope.getPopImdb(imdb_id);\n    })\n  }\n\n  $scope.getPopImdb = imdb_id => {\n    mainSvc.getPopImdb(imdb_id).then(response => {\n      $scope.imdb_detail = response;\n    });\n  }\n\n  $scope.getPopular();\n\n  $scope.getNowPlaying = () => {\n    mainSvc.getNowPlaying().then(response => {\n      $scope.getNowPlaying2 = () => {\n      mainSvc.getNowPlaying2().then(response => {\n        $scope.nowPlaying2 = response;\n      });\n    }\n      $scope.getNowPlaying2();\n\n      response.sort(function (a, b) {\n        if (a.release_date < b.release_date) {\n          return 1;\n        }\n        if (a.release_date > b.release_date) {\n          return -1;\n        }\n        return 0;\n        });\n\n      $scope.nowPlaying = response;\n      // console.log('now playing', $scope.nowPlaying);\n    });\n  }\n  $scope.getNowPlaying();\n\n\n  $scope.getComingSoon = () => {\n    mainSvc.getComingSoon().then(response => {\n      var masterComingSoon = [];\n\n      for(var i = 0; i < response.length; i++){\n        masterComingSoon.push(response[i]);\n      }\n\n      masterComingSoon.sort(function (a, b) {\n        if (a.release_date < b.release_date) {\n          return 1;\n        }\n        if (a.release_date > b.release_date) {\n          return -1;\n        }\n        return 0;\n        });\n      $scope.comingSoon = masterComingSoon;\n\n      // console.log('master coming soon', $scope.comingSoon);\n    })\n  }\n  $scope.getComingSoon();\n\n\n  //SEARCH VIEW\n  $scope.getSearch = term => {\n    $scope.getPeople(term);\n    // $scope.getTheatersInArea(term);\n    $scope.getUsers(term);\n    // console.log('search', term);\n    mainSvc.getSearchMovie(term).then(response => {\n      for(var i = 0; i < response.length; i++){\n        response[i].release_date = response[i].release_date.substring(0, 4);\n      }\n      $scope.movieSearch = response;\n      // console.log($scope.movieSearch);\n    });\n  };\n  $scope.getPeople = term => {\n    mainSvc.getPeople(term).then(response => {\n      $scope.person = response;\n      // console.log('PERSON SEARCH', $scope.person);\n    });\n  }\n   $scope.getTheatersInArea = term => {\n    // console.log('get theaters', term);\n    mainSvc.getTheatersInArea(term).then(function(response){\n      $scope.theaters = response;\n      // console.log('theaters', $scope.theaters);\n    })\n  }\n  $scope.getUsers = term => {\n    // console.log('get users', term);\n    mainSvc.getUsers(term).then(function(response){\n      $scope.users = response;\n    });\n  }\n\n  //MYLIST VIEW\n      var fb_id;\n\n  $scope.logoutUser = () => {\n    mainSvc.logoutUser().then(response => {\n\n      // console.log(response);\n      if (!response.data.user) {\n        $scope.user = null;\n        fb_id = null;\n        $scope.getWatch();\n        // console.log('logout getWatch');\n      }\n\n    })\n  }\n    mainSvc.getUser().then(response => {\n      if(response.data){\n        // console.log('user', response.data);\n        $scope.user = response.data;\n        fb_id = response.data.fb_id;\n        // console.log(fb_id);\n          $scope.getFavs(fb_id);\n          $scope.getWatch(fb_id);\n          $scope.getWatched(fb_id);\n          $scope.getReviews(fb_id);\n      }\n    });\n\n  $scope.getFavs = () => {\n \n    mainSvc.getFavs(fb_id).then(response => {\n      $scope.favorites = response;\n      \n    });\n  }\n\n  $scope.getWatched = () => {\n    mainSvc.getWatched(fb_id).then(response => {\n      $scope.watched = response;\n    });\n  }\n\n  $scope.getWatched();\n\n  var watchlist\n\n  $scope.getWatch = () => {\n      // console.log('$scope.getWatch fired')\n    mainSvc.getWatch(fb_id).then(response => {\n      $scope.watch = response;\n      // console.log('WATCHLIST', $scope.watch);\n      // console.log('mainSvc.getWatch fired')\n\n      // console.log('watchlist', $scope.watch);\n      // watchlist = response;\n    });\n  }\n  // $scope.getWatch(fb_id);\n\n  $scope.updateWatched = function(mdb_id, fb_id){\n    var id = {};\n    id.id = mdb_id;\n    id.fb_id = fb_id;\n    console.log(id);\n    mainSvc.updateWatched(id).then(response => {\n      $scope.getWatched();\n      $scope.getWatch();\n    });\n  }\n\n  $scope.updateFav = function(mdb_id, fb_id){\n    var id = {}\n    id.id = mdb_id;\n    id.fb_id = fb_id;\n    // console.log(id);\n    mainSvc.updateFav(id).then(response => {\n      // console.log('your list is updated');\n      $scope.getFavs();\n      $scope.getWatched();\n      $scope.getWatch();\n    });\n  }\n\n  $scope.delete = function(mdb_id, fb_id, id){\n    var del_id = {}\n    del_id.id = mdb_id;\n    del_id.fb_id = fb_id;\n    del_id.id2 = id;\n    // console.log(del_id);\n    mainSvc.delete(del_id).then(response => {\n      // console.log('movie deleted');\n      $scope.getFavs();\n      $scope.getWatched();\n      $scope.getWatch();\n    });\n  }\n  $scope.deleteReview = function(mdb_id, fb_id, id){\n    var del_id = {}\n    del_id.id = mdb_id;\n    del_id.fb_id = fb_id;\n    del_id.id2 = id;\n    // console.log(del_id);\n    mainSvc.deleteReview(del_id).then(response => {\n      $scope.getReviews(fb_id);\n      // console.log('movie deleted');\n    });\n  }\n\n  //reviews\n  $scope.addToReviews = function(film, name){\n    film.user_name = name;\n    // console.log(film);\n    mainSvc.addToReviews(film).then(response => {\n      $scope.reviews = response;\n      $scope.getReviews(fb_id);\n    });\n  }\n\n  $scope.getReviews = fb_id => {\n    mainSvc.getReviews(fb_id).then(response => {\n      // for(var i = 0; i < response.length; i++){\n      //   response[i].rating = Number(response[i].rating);\n      // }\n      for(var i = 0; i < response.length; i++){\n        response[i].reviewColor = $scope.colorPicker(response[i].rating);\n      }\n      $scope.reviews = response;\n      // console.log('REVIEWS', $scope.reviews);\n    });\n  }\n\n\n    $scope.editReview = function(mdb_id, fb_id){\n      var edit = {};\n      edit.mdb_id = mdb_id;\n      edit.fb_id = fb_id;\n      // console.log(edit);\n      mainSvc.editReview(edit).then(response => {\n        $scope.reviewToEdit = response;\n        // console.log('review to edit', $scope.reviewToEdit);\n\n        $scope.comments = response[0].review;\n        $scope.tagline = response[0].tagline;\n        $scope.author = response[0].author;\n        $scope.rating = Number(response[0].rating);\n      });\n    };\n\n\n});\n","angular.module('flixApp').service('mainSvc', function($http){\n\n// var config = require('./../../server/config');\n\nvar tmsapi = 'tx8g3c9h9ca737eh3y7sw66v';\nvar mdbapi = '8eecf03080f34edf303e14b5f1476653';\nvar guideboxapi = 'rKsvLMllrJ7ebTRG3cMa5smyjptG5sDJ';\nvar omdbapi = '752618d';\n  \n//HOME PAGE SECTION\n  //get popular for home page billboard and row\n  this.getPopular = () => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/movie/popular?api_key='+ mdbapi +'&language=en-US'\n    }).then(response => response.data.results);\n  };\n  //getting details on mdb for billboard\n  this.getPopularDetails = id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/movie/' + id.id + '?api_key='+ mdbapi +'&language=en-US&append_to_response=undefined'\n    }).then(response => response.data);\n  };\n  //getting details on omdb for billboard\n  this.getPopImdb = imdb_id => {\n    return $http({\n      method: 'GET',\n      url: 'https://www.omdbapi.com/?i=' + imdb_id.id + '&apikey=' + omdbapi\n    }).then(response => response.data);\n  };\n  //getting now playing row\n  this.getNowPlaying = function(){\n    return $http({\n      method:'GET',\n      url: 'https://api.themoviedb.org/3/movie/now_playing?api_key='+ mdbapi +'&language=en-US'\n    }).then(response => response.data.results);\n  };\n  //getting page 2 of now playing\n  this.getNowPlaying2 = () => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/movie/now_playing?api_key='+ mdbapi +'&language=en-US&page=2'\n    }).then(response => response.data.results);\n  };\n  //getting comming soon for row\n  this.getComingSoon = function(){\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/movie/upcoming?api_key='+ mdbapi +'&language=en-US'\n    }).then(function(response){\n      return response.data.results;\n    })\n  }\n  //getting page 2 for coming soon\n  this.getComingSoon2 = () => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/movie/upcoming?api_key='+ mdbapi +'&language=en-US&page=2'\n    }).then(response => response.data.results);\n  };\n  //DETAILS SECTION\n  //getting detail of movie from mdb\n  this.getDetails = id => {\n    return $http({\n      method:'GET',\n      url: 'https://api.themoviedb.org/3/movie/'+ id + '?api_key='+ mdbapi +'&language=en-US&append_to_response=undefined'\n    }).then(response => response.data);\n  };\n  //getting omdb details for movie\n  this.getImdb = imdb_id => {\n    return $http({\n      method:'GET',\n      url: 'https://www.omdbapi.com/?i=' + imdb_id + '&apikey=' + omdbapi\n    }).then(response => response.data);\n  };\n  //get videos for details page from mdb\n  this.getVideos = imdb_id => {\n    return $http({\n      method:'GET',\n      url:'https://api.themoviedb.org/3/movie/'+ imdb_id +'/videos?api_key=' + mdbapi\n    }).then(response => response.data.results);\n  };\n  //getting cast for movie from mdb\n  this.getCast = imdb_id => {\n    return $http({\n      method: 'GET',\n      url:'https://api.themoviedb.org/3/movie/'+ imdb_id +'/credits?api_key=' + mdbapi\n    }).then(response => response.data);\n  };\n  //getting credits for movie detail\n  this.getCredits = id => {\n    return $http({\n      url: 'https://api.themoviedb.org/3/movie/'+ id +'/credits?api_key=' + mdbapi\n    }).then(function(response){\n      return response.data;\n    });\n  };\n  //getting similar movies for movie detail\n  this.getSimilars = imdb_id => {\n    return $http({\n      method:'GET',\n      url:'https://api.themoviedb.org/3/movie/' + imdb_id + '/similar?api_key='+ mdbapi +'&language=en-US'\n    }).then(response => response.data.results);\n  };\n  this.getRecommendations = id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/movie/' + id + '/recommendations?api_key='+ mdbapi +'&language=en-US&page=1'\n    }).then(response => response.data.results);\n  }\n  //getting guidebox info using mdb id\n  this.getGuideBox = id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api-public.guidebox.com/v1.43/US/'+ guideboxapi +'/search/movie/id/themoviedb/' + id\n    }).then(response => response.data);\n  };\n  //getting the guidbox detail id to get detailed information\n  this.getGuideBoxDetails = id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api-public.guidebox.com/v1.43/US/'+ guideboxapi +'/movie/' + id\n    }).then(response => response.data);\n  };\n  this.getImages = imdb_id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/movie/' + imdb_id + '/images?api_key=' + mdbapi\n    }).then(response => response.data);\n  };\n  this.getUserReviews = mdb_id => {\n    return $http({\n      method: 'GET',\n      url: '/user_reviews/' + mdb_id\n    }).then(response => response.data);\n  };\n//SEARCH VIEW\n  //get search based on term\n  this.getSearchMovie = term =>{\n    return $http({\n      method:'GET',\n      url: 'https://api.themoviedb.org/3/search/movie?api_key='+ mdbapi +'&language=en-US&query=' + term\n    }).then(response => response.data.results);\n  };\n  //get people based on term\n  this.getPeople = term =>{\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/search/person?api_key='+ mdbapi +'&language=en-US&query=' + term + '&page=1&include_adult=false'\n    }).then(response => response.data.results);\n    //function(response);\n  };\n  this.getUsers = term => {\n    return $http({\n      method:'GET',\n      url: '/users/' + term\n    }).then(function(response){\n      return response.data;\n    });\n  }\n//DATABASE STUFF\n  //adding movie to favorites list\n  this.addToFav = fav => {\n    return $http({\n      method:'POST',\n      url: '/favorites',\n      data: fav\n    }).then(response => response);\n  };\n\n  this.getFavs = fb_id => {\n    return $http({\n      method: 'GET',\n      url: '/favorites/' + fb_id,\n    }).then(response => response.data);\n  };\n  this.addtoWatched = fav => {\n    return $http({\n      method:'POST',\n      url: '/watched',\n      data: fav\n    }).then(response => response);\n  };\n\n  this.getWatched = fb_id => {\n    return $http({\n      method: 'GET',\n      url: '/watched/' + fb_id,\n    }).then(response => response.data);\n  };\n\n  this.addToWatch = fav => {\n    return $http({\n      method: 'POST',\n      url: '/watchlist',\n      data: fav\n    }).then(response => response.data);\n  };\n  this.getWatch = fb_id => {\n    return $http({\n      method: 'GET',\n      url: '/watchlist/' + fb_id\n    }).then(response => response.data);\n  };\n  this.updateFav = id => {\n\n    return $http({\n      method: 'PUT',\n      url: '/update',\n      data: id\n    }).then(response => response);\n  };\n  this.updateWatched = id => {\n    return $http({\n      method: 'PUT',\n      url: '/update_watched',\n      data: id\n    }).then(response => response);\n  }\n  this.delete = del_id => {\n    return $http({\n      method:'DELETE',\n      url: '/delete/' + del_id.id + '/' + del_id.fb_id + '/' + del_id.id2\n    }).then(response => response);\n  };\n\n  this.deleteReview = del_id => {\n    return $http({\n      method: 'DELETE',\n      url: '/deletereview/' + del_id.id + '/' + del_id.fb_id + '/' + del_id.id2\n    }).then(response => response);\n  };\n\n  this.addToReviews = film => {\n    return $http({\n      method: 'POST',\n      url: '/reviews',\n      data: film\n    }).then(response => response.data);\n  }\n\n  this.getReviews = fb_id => {\n    return $http({\n      method: 'GET',\n      url: '/reviews/' + fb_id\n    }).then(response => response.data);\n  }\n\n  this.submitReview = review => {\n    return $http({\n      method: 'POST',\n      url: '/comments',\n      data: review\n    }).then(response => response.data);\n  };\n\n  this.editReview = edit => {\n    return $http({\n      method: 'GET',\n      url: '/update/' + edit.mdb_id + '/' + edit.fb_id\n    }).then(response => response.data);\n  };\n  this.getUserReviews2 = id => {\n    return $http({\n    method: 'GET',\n    url: '/user_reviews2' + '/' + id.id\n  }).then(response => response.data);\n};\n  this.getUser = () => {\n    return $http({\n      method: 'GET',\n      url: '/user'\n    }).then(response => response);\n  };\n\n  this.logoutUser = () => {\n    return $http({\n      method: 'GET',\n      url: '/logout'\n    }).then(response => response);\n  };\n  this.getShowtimes = function(date, zip){\n    return $http({\n      method: 'GET',\n      url: 'https://data.tmsapi.com/v1.1/movies/showings?startDate=' + date + '&zip=' + zip + '&api_key=' + tmsapi\n    }).then(function(response){\n      return response.data;\n    });\n  }\n  this.getTheatersInArea = function(zip){\n    return $http({\n      method: 'GET',\n      url: 'http://data.tmsapi.com/v1.1/theatres?zip=' + zip + '&radius=20&api_key=' + tmsapi\n    }).then(function(response){\n      return response.data;\n    });\n  }\n  this.getTheater = function(theaterId, date){\n    return $http({\n      method: 'GET',\n      url: 'http://data.tmsapi.com/v1.1/theatres/' + theaterId.id + '/showings?startDate=' + date + '&imageSize=Lg&imageText=true&api_key=' + tmsapi\n    }).then(response => {\n      return response.data;\n    })\n  }\n  this.getTheaterDetails = function(theaterId){\n    return $http({\n      method: 'GET',\n      url: 'http://data.tmsapi.com/v1.1/theatres/' + theaterId.id + '?api_key=' + tmsapi\n    }).then(function(response){\n      return response.data;\n    });\n  }\n  //people page STUFF\n  this.getPersonDetails = person_id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/person/' + person_id + '?api_key='+ mdbapi +'&language=en-US'\n    }).then(response => response.data);\n  };\n  this.getPersonMovieCredits = person_id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/person/' + person_id + '/movie_credits?api_key='+ mdbapi +'&language=en-US'\n    }).then(response => response.data);\n  };\n  this.getKnownFor = person_name => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/search/person?api_key='+ mdbapi +'&language=en-US&query=' + person_name + '&page=1&include_adult=false'\n    }).then(response => response.data);\n  };\n  this.getPersonImages = person_id => {\n    return $http({\n      method:'GET',\n      url: 'https://api.themoviedb.org/3/person/'+ person_id +'/tagged_images?api_key=' + mdbapi +'&language=en-US&page=1'\n    }).then( response => response.data.results);\n  };\n  this.getPersonImages2 = person_id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/person/'+ person_id +'/tagged_images?api_key=' + mdbapi +'&language=en-US&page=2'\n    }).then(response => {\n      return response.data.results;\n    });\n  };\n  this.getPersonImages3 = person_id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/person/'+ person_id +'/tagged_images?api_key=' + mdbapi +'&language=en-US&page=3'\n    }).then(response => {\n      return response.data.results;\n    });\n  };\n  this.getPersonImages4 = person_id => {\n    return $http({\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/person/'+ person_id +'/tagged_images?api_key=' + mdbapi +'&language=en-US&page=4'\n    }).then(response => {\n      return response.data.results;\n    });\n  };\n  //user data\n  this.getUserData = id =>{\n    return $http({\n      method: 'GET',\n      url: '/user/' + id.id,\n    }).then(response => {\n      return response.data;\n    });\n  };\n  this.getUserInfo = id => {\n    return $http({\n      method: 'GET',\n      url: '/userinfo/' + id.id,\n    }).then(response => {\n      return response.data;\n    });\n  }\n});\n","angular.module('flixApp').controller('creditsCtrl', function($scope, $stateParams, mainSvc){\n  var id = $stateParams.id;\n\n  $scope.getCredits = () => {\n    mainSvc.getCast(id).then(function(response){\n      $scope.cast = response.cast;\n      $scope.crew = response.crew;\n      $scope.numCredits = response.cast.length + response.crew.length;\n\n      for(var i = 0; i < response.cast.length; i++){\n        response.cast[i].firstLetter = response.cast[i].name[0];\n      }\n\n      var crew = response.crew\n\n      var directing = crew.filter(function(crew){\n        return crew.department === 'Directing';\n      });\n      var writing = crew.filter(function(crew){\n        return crew.department === 'Writing';\n      })\n      var camera = crew.filter(function(crew){\n        return crew.department === 'Camera';\n      })\n      var art = crew.filter(function(crew){\n        return crew.department === 'Art';\n      })\n      var production = crew.filter(function(crew){\n        return crew.department === 'Production';\n      });\n      var sound = crew.filter(function(crew){\n        return crew.department === 'Sound';\n      });\n      var visualEffects = crew.filter(function(crew){\n        return crew.department === 'Visual Effects';\n      });\n      var editorial = crew.filter(function(crew){\n        return crew.department === 'Editorial Staff';\n      });\n      var lighting = crew.filter(function(crew){\n        return crew.department === 'Lighting';\n      });\n      var crewDep = crew.filter(function(crew){\n        return crew.department === 'Crew';\n      })\n      var editing = crew.filter(function(crew){\n        return crew.department === 'Editing';\n      });\n      $scope.directing = directing;\n      $scope.writing = writing;\n      $scope.camera = camera;\n      $scope.art = art;\n      $scope.production = production;\n      $scope.sound = sound;\n      $scope.visualEffects = visualEffects;\n      $scope.editorial = editorial;\n      $scope.lighting = lighting;\n      $scope.crewDep = crewDep;\n      $scope.editing = editing;\n\n\n      $scope.getDetails(id);\n    });\n  }\n\n  $scope.getCredits();\n  $scope.getDetails = function(){\n    mainSvc.getDetails(id).then(function(response){\n      $scope.creditDetails = response;\n    });\n  };\n});\n","angular.module('flixApp').controller('detailsCtrl', function($scope, $stateParams, mainSvc, $sce){\n  var id = $stateParams.id;\n  $scope.trustSrc = function(link) {\n  return $sce.trustAsResourceUrl(link);\n};\n\nvar fb_id;\nvar user_name;\n\n$scope.getFbUser = function(){\n  mainSvc.getUser().then(function(response){\n      fb_id = response.data.fb_id;\n      user_name = response.data.name\n});\n}\n$scope.getFbUser();\n\n//putting film into object on fav\nvar fav;\n\n  $scope.getDetails = id => {\n    mainSvc.getDetails(id).then(response => {\n      var imdb_id = response.imdb_id;\n      fav = response;\n      $scope.id = response;\n      $scope.detail = response;\n      $scope.production_companies = response.production_companies;\n      $scope.getImdb(imdb_id);\n      $scope.getVideos(imdb_id);\n      $scope.getCast(imdb_id);\n      $scope.getSimilars(imdb_id);\n      $scope.getRecommendations(id);\n      $scope.getImages(imdb_id);\n      $scope.getGuideBox(response.id);\n      $scope.getUserReviews(response.id);\n    });\n  }\n  $scope.getDetails(id);\n\n  var metascore;\n  $scope.getImdb = imdb_id => {\n    mainSvc.getImdb(imdb_id).then(response => {\n      $scope.imdb = response;\n      // console.log($scope.imdb);\n      metascore = response.Metascore;\n    });\n  }\n\n  $scope.getVideos = imdb_id => {\n    mainSvc.getVideos(imdb_id).then(response => {\n      var links = []\n      for(var i = 0; i < response.length; i++){\n        links.push('https://www.youtube.com/embed/' + response[i].key);\n      }\n      $scope.videos = links;\n    })\n  }\n  var count = 1;\n  var beyondFlag = false;\n  $scope.shiftLeft = function(){\n    let container = document.getElementsByClassName('videos-container')[0];\n    function IntervalLogic(){    \n      // console.log(count);\n      if(container.scrollLeft < container.children.length * container.offsetWidth - (container.offsetWidth)){\n        container.scrollLeft += 10;\n      }\n      // console.log(container.scrollLeft, count + 1);\n      if(container.scrollLeft == (container.offsetWidth * count)){\n        clearInterval(refresh);\n        count++;\n        // console.log(container.children.length * container.offsetWidth - (container.offsetWidth));\n        if(container.scrollLeft >= (container.children.length * container.offsetWidth) - container.offsetWidth){\n          clearInterval(refresh);\n          container.scrollLeft = container.offsetWidth * (count - 1);\n          beyondFlag = true;\n          // console.log(beyondFlag, container.scrollLeft);\n        }\n      }\n    }\n    if(!beyondFlag){\n      var refresh = setInterval(IntervalLogic, 0);\n    }\n    \n    // container.scrollLeft += container.offsetWidth;\n  }\n  $scope.shiftRight = function(){\n    if(beyondFlag){\n      beyondFlag = !beyondFlag;\n    }\n    // console.log(beyondFlag);\n    let container = document.getElementsByClassName('videos-container')[0];\n    function IntervalLogic(){\n      container.scrollLeft -= 10;\n      // console.log(container.scrollLeft, count, (container.offsetWidth * (count - 1)) - container.offsetWidth);\n      if(container.scrollLeft == (container.offsetWidth * (count - 1)) - container.offsetWidth){\n        clearInterval(refresh);\n        count--;\n      } else if(container.scrollLeft == 0){\n        clearInterval(refresh);\n        count = 1;\n      }\n    }\n    var refresh = setInterval(IntervalLogic, 0);\n    // container.scrollLeft -= container.offsetWidth;\n  }\n  $scope.getCast = imdb_id => {\n    mainSvc.getCast(imdb_id).then(response => {\n      var newCast = [];\n      for(var i = 0; i < 7;i++){\n        newCast.push(response.cast[i]);\n      }\n      $scope.cast = newCast;\n      var crew = response.crew;\n\n      var director = crew.filter(function(crew){\n        return crew.job === 'Director' && crew.department === 'Directing';\n      });\n      $scope.director = director;\n      $scope.crew = response.crew2;\n    });\n  }\n  $scope.getImages = imdb_id => {\n    mainSvc.getImages(imdb_id).then(response => {\n      // for(var i = 0; i < response.backdrops.length; i++){\n      //    response.backdrops[i].file_path = 'https://image.tmdb.org/t/p/original' + response.backdrops[i].file_path\n      // };\n      if(response.backdrops.length > 1){\n        $scope.secondBackdrop = response.backdrops[1]\n      } else {\n        $scope.secondBackdrop = response.backdrops[0];\n      }\n      $scope.backDrops = response.backdrops;\n    });\n  }\n  $scope.getSimilars = imdb_id => {\n    mainSvc.getSimilars(imdb_id).then(response => {\n      $scope.similar = response;\n    });\n  }\n  $scope.getRecommendations = id => {\n    mainSvc.getRecommendations(id).then(function(response){\n      $scope.recommendations = response;\n    })\n  }\n  $scope.getGuideBox = id => {\n    mainSvc.getGuideBox(id).then(response => {\n      var gb_id = response.id\n      $scope.getGuideBoxDetails(gb_id);\n    });\n  }\n  $scope.getGuideBoxDetails = gb_id => {\n    mainSvc.getGuideBoxDetails(gb_id).then(response => {\n      function metaColor(response, metascore){\n        if(metascore >= 60){\n          response.metaColor = '#66CC33';\n        }\n        else if(metascore >= 30){\n          response.metaColor = '#FFCC33';\n        }\n        else if(metascore >= 0){\n          response.metaColor = '#FF0000';\n        }\n      }\n      metaColor(response, metascore);\n      $scope.guidebox = response;\n      var webPurchase = response.purchase_web_sources;\n      var result = webPurchase.filter(webPurchase => {\n        return webPurchase.source === \"google_play\" || webPurchase.source === \"itunes\"; //webPurchase.source === \"amazon_buy\";\n      });\n      if(result[0]){\n        result[0].img = \"https://smoothjazzandmore.files.wordpress.com/2016/07/itunes-button.png\";\n      }\n      // result[1].img = \"https://static1.squarespace.com/static/54d05749e4b08a66f8bde05e/569c35d505caa74dde794ce3/569c35e81115e0984d256776/1453078092910/available-on-amazon.png\";\n      if(result[1]){\n        result[1].img = \"https://vignette2.wikia.nocookie.net/implosion/images/7/74/Google_play.png/revision/latest?cb=20150411081733\";\n        $scope.guideboxPurchases = result;\n      }\n    });\n  }\n  $scope.getUserReviews = mdb_id => {\n    mainSvc.getUserReviews(mdb_id).then(response => {\n      // for(var i = 0; i < response.length; i++){\n      //   response[i].photo = \"https://scontent.xx.fbcdn.net/t31.0-1/10457710_\" + response[i].fb_id + '_7996853287290615145_o.jpg'\n      // }\n      for(var i = 0; i < response.length; i++){\n        response[i].reviewColor = $scope.colorPicker(response[i].rating);\n      }\n      $scope.userReviews = response;\n    });\n  }\n  $scope.getShowtimes = function(zip, date){\n    var date = date.toISOString().substring(0, 10);\n    $scope.getTheatersInArea(zip);\n    mainSvc.getShowtimes(date, zip).then(function(response){\n      var currentFilm = fav.title;\n      var currentFilmShowTimes = [];\n      for(var i = 0; i < response.length; i++){\n        if(response[i].title.includes(currentFilm)){\n          currentFilmShowTimes.push(response[i]);\n        }\n      }\n\n      $scope.title1 = currentFilmShowTimes[0];\n      $scope.title2 = currentFilmShowTimes[1];\n      $scope.title3 = currentFilmShowTimes[2];\n      $scope.showtimes = currentFilmShowTimes;\n      var showings = [];\n      for(var j = 0; j < currentFilmShowTimes.length; j++){\n        showings.push(currentFilmShowTimes[j].showtimes);\n      }\n      // for(var k = 0; k < showings.length; k++){\n      //   showings[k].dateTime.substring(11, 15);\n      // }\n      $scope.showings1 = showings[0];\n      $scope.showings2 = showings[1];\n      $scope.showings3 = showings[2];\n    });\n  }\n  $scope.getShowTimesFunc = $event => {\n    if ($event.keyCode == 13) {\n      $scope.getShowtimes($scope.zip);\n    }\n  }\n  $scope.getTheatersInArea = (zip) => {\n    mainSvc.getTheatersInArea(zip).then(function(response){\n      $scope.theaters = response;\n    })\n  }\n  //DETAIL AND WATCH LIST BUTTONS\n  $scope.addToFav = () => {\n    fav.fb_id = fb_id;\n    $scope.showModal = true;\n    mainSvc.addToFav(fav).then(response => {\n      $scope.getFavs();\n\n      var current = false;\n      for(var i = 0; i < $scope.favorites.length; i++){\n        if($scope.favorites[i].id === fav.id){\n          current = true;\n        }\n      }\n\n      $scope.currentFilm = current;\n    })\n  };\n  $scope.addToWatch = () => {\n    $scope.showModalwatchlist = true;\n    fav.fb_id = fb_id;\n    mainSvc.addToWatch(fav).then(response => {\n      $scope.getWatch();\n    });\n  };\n  $scope.addToWatched = () => {\n    $scope.showModalwatch = true;\n    fav.fb_id = fb_id;\n    mainSvc.addtoWatched(fav).then(response => {\n      $scope.getWatched();\n    });\n  }\n});\n","angular.module('flixApp').controller('loginCtrl', function($scope, mainSvc){\n\n});\n","angular.module('flixApp').controller('editCtrl', function($scope, mainSvc, $stateParams){\n  var id = $stateParams.id;\n  $scope.enterClick = false;\n\n  $scope.getEditDetails = function(id){\n    mainSvc.getDetails(id).then(function(response){\n      $scope.editDetails = response;\n\n    });\n  }\n  $scope.getEditDetails(id);\n\n  $scope.submitReview = function(tagline, author, comments, rating, fb_id){\n    if(rating){ //if rating is true then run\n      var review = {}\n      review.tagline = tagline;\n      review.author = author;\n      review.review = comments;\n      review.mdb_id = id;\n      review.rating = rating;\n      review.fb_id = fb_id;\n\n      mainSvc.submitReview(review).then(function(response){\n        $scope.getReviews(fb_id);\n      });\n    } else {\n      $scope.enterClick = true;\n    }\n\n  };\n});\n","angular.module('flixApp').controller('mylistCtrl', function($scope, mainSvc){\n\n\n\n  $scope.getFavs = function(){\n    mainSvc.getFavs().then(function(response){\n      $scope.favorites = response;\n    });\n  }\n\n  $scope.getFavs();\n\n});\n","angular.module('flixApp').controller('peopleCtrl', function($scope, $stateParams, mainSvc){\n  var person_id = $stateParams.id;\n  // console.log(person_id);\n\n  $scope.getPersonDetails = person_id => {\n    mainSvc.getPersonDetails(person_id).then(response => {\n      var person_name = response.name\n      response.firstLetter = response.name[0];\n\n      $scope.personDetail = response;\n      // console.log($scope.personDetail);\n      $scope.getKnownFor(person_name);\n    });\n    }\n  $scope.getPersonDetails(person_id);\n\n  $scope.getKnownFor = person_name => {\n    mainSvc.getKnownFor(person_name).then(response => {\n      $scope.knownFor = response.results[0].known_for;\n      // console.log('Known for', $scope.knownFor);\n      $scope.firstKnown = response.results[0].known_for[0];\n      // console.log('first knwon', $scope.firstKnown);\n    });\n  }\n  \n  $scope.getPersonImages = (person_id, cycle) => {\n    mainSvc.getPersonImages(person_id).then(response => {\n      \n      cycle(response);\n\n      let personBackdrops1 = response;\n      let personBackdrops = personBackdrops1.filter(function(personBackdrops1){\n        return personBackdrops1.image_type === 'backdrop'\n      })\n      //sorts images by movie title\n      personBackdrops.sort(function (a, b) {\n        if (a.media.title > b.media.title) {\n          return 1;\n        }\n        if (a.media.title < b.media.title) {\n          return -1;\n        }\n        return 0;\n        });\n\n      $scope.personImg = personBackdrops;\n      // console.log('person img', $scope.personImg);\n    })\n  } \n  ;\n  function cycle(response){\n    var count;\n        if(count === response.length - 1){\n          count = 0;\n        } else if(count === 0){\n          count = count + 1;\n        }\n        // console.log(count);\n      $scope.personBG = response[3]\n      // console.log('bg', $scope.personBG);\n      }\n  $scope.getPersonImages(person_id, cycle);\n\n  $scope.getPersonImages2 = (person_id) => {\n    mainSvc.getPersonImages2(person_id).then(function(response){\n      let personBackdrops2 = response.filter(function(response){\n        return response.image_type === 'backdrop';\n      });\n      //sorts images by movie title\n      personBackdrops2.sort(function (a, b) {\n        if (a.media.title > b.media.title) {\n          return 1;\n        }\n        if (a.media.title < b.media.title) {\n          return -1;\n        }\n        return 0;\n        });\n      $scope.personImg2 = personBackdrops2;\n    });\n  }\n  $scope.getPersonImages2(person_id);\n\n  $scope.getPersonImages3 = (person_id) => {\n    mainSvc.getPersonImages3(person_id).then(function(response){\n      let personBackdrops3 = response.filter(function(response){\n        return response.image_type === 'backdrop';\n      });\n      //sorts images by movie title\n      personBackdrops3.sort(function (a, b) {\n        if (a.media.title > b.media.title) {\n          return 1;\n        }\n        if (a.media.title < b.media.title) {\n          return -1;\n        }\n        return 0;\n        });\n      $scope.personImg3 = personBackdrops3;\n    });\n  }\n  $scope.getPersonImages3(person_id);\n\n  $scope.getPersonImages4 = (person_id) => {\n    mainSvc.getPersonImages4(person_id).then(function(response){\n      let personBackdrops4 = response.filter(function(response){\n        return response.image_type === 'backdrop';\n      });\n      //sorts images by movie title\n      personBackdrops4.sort(function (a, b) {\n        if (a.media.title > b.media.title) {\n          return 1;\n        }\n        if (a.media.title < b.media.title) {\n          return -1;\n        }\n        return 0;\n        });\n      $scope.personImg4 = personBackdrops4;\n    });\n  }\n  $scope.getPersonImages4(person_id);\n  \n\n  $scope.getPersonMovieCredits = person_id => {\n\n    mainSvc.getPersonMovieCredits(person_id).then(response => {\n      $scope.credNum = response.cast.length + response.crew.length;\n\n      var personCast = response.cast;\n      var crew = response.crew;\n      // console.log('person crew', personCrew);\n      // for(var i = 0; i < personCast.length; i++){\n      //   personCast[i].release_date = personCast[i].release_date.substring(0, 4);\n      // }\n\n      personCast.sort(function (a, b) {\n        if (a.release_date < b.release_date) {\n          return 1;\n        }\n        if (a.release_date > b.release_date) {\n          return -1;\n        }\n  // a must be equal to b\n        return 0;\n        });\n\n\n\n      var personCrew = response.crew;\n      personCrew.sort(function (a, b) {\n        if (a.release_date < b.release_date) {\n          return 1;\n        }\n        if (a.release_date > b.release_date) {\n          return -1;\n        }\n  // a must be equal to b\n        return 0;\n        });\n\n\n        $scope.personCast = personCast;\n\n        // var newCrew = [];\n        //\n        // for(var i = 0; i < crew.length; i++){\n        //   console.log(crew[i].id);\n        //   if(crew[i].id !== crew[i + 1].id){\n        //     newCrew.push(crew[i]);\n        //   }\n        // }\n        // console.log(newCrew);\n\n        $scope.crew = crew;\n        // console.log($scope.personCast);\n      // console.log('person movie cred', $scope.personCrew, $scope.personCast);\n    });\n  }\n  $scope.getPersonMovieCredits(person_id);\n\n});\n","angular.module('flixApp').controller('searchCtrl', function($scope, mainSvc){\n\n\n\n});\n","angular.module('flixApp').controller('theaterCtrl', function($scope, mainSvc, $stateParams, $sce){\n    var theaterId = $stateParams;\n\n    $scope.trustSrc = function(map) {\n        return $sce.trustAsResourceUrl(map);\n    };\n\n    if(!$scope.date){\n    var date = new Date().toISOString().substring(0, 10);\n    }\n\n    $scope.getTheater = function(date){\n        \n        if($scope.date){\n        var date = $scope.date.toISOString().substring(0, 10);\n        }\n        $scope.day = date;\n        mainSvc.getTheater(theaterId, date).then(function(response){\n        response.sort(function (a, b) {\n        if (a.title < b.title) {\n          return 1;\n        }\n        if (a.title > b.title) {\n          return -1;\n        }\n  // a must be equal to b\n        return 0;\n        });\n        $scope.theater = response;\n        $scope.getTheaterDetails();\n      });\n    }\n    $scope.getTheaterDetails = function(){\n        mainSvc.getTheaterDetails(theaterId).then(function(response){\n            $scope.map = 'https://www.google.com/maps/embed/v1/place?key=AIzaSyBG1FaMjyrJZWHUprmlMrpZBIwq_TH-hNs&q=' + response.name;\n            $scope.theaterDetails = response;\n        })\n    }\n\n    $scope.getTheater(date);\n    \n});","angular.module('favoritesCardDirective', []).directive('favoritesCard', function(){\n    return {\n        restrict: 'E',\n        scope: {\n            film: '='\n        },\n        templateUrl: './js/user/filmCard.html',\n        controller: function($scope){\n           \n            $scope.film;\n        }\n    }\n});","angular.module('flixApp').controller('userCtrl', function($scope, mainSvc, $stateParams){\n    var id = $stateParams\n\n     var getUserData = function(id){\n            mainSvc.getUserInfo(id).then(function(response){\n                $scope.userInfo = response[0];\n            });\n            mainSvc.getUserData(id).then(function(response){\n            var films = response.filter(function(response){\n                return response.status === 2;\n            });\n            let watched = response.filter(function(films){\n                return films.status === 3\n            });\n            let favorites = response.filter(function(films){\n                return films.status === 1;\n            });\n            $scope.watched = watched;\n            $scope.favorites = favorites;\n            $scope.watchlist = films;\n            });\n        }\n    getUserData(id);\n});","angular.module('watchedCardDirective', []).directive('watchedCard', function(){\n    return {\n        restrict: 'E',\n        scope: {\n            film: '='\n        },\n        templateUrl: './js/user/filmCard.html',\n        controller: function($scope){\n            $scope.film;\n        }\n    }\n});","angular.module('watchlistCardDirective', []).directive('watchlistCard', function(){\n    return {\n        restrict: 'E',\n        scope: {\n            film: '='\n        },\n        templateUrl: './js/user/filmCard.html',\n        controller: function($scope){\n           \n           $scope.film;\n        }\n    }\n});","angular.module('flixApp').controller('userReviewsCtrl', function($scope, mainSvc, $stateParams){\n  var id = $stateParams;\n  $scope.getUserReviews2 = (id) => {\n    mainSvc.getUserReviews2(id).then(function(response){\n      for(var i = 0; i < response.length; i++){\n        response[i].reviewColor = $scope.colorPicker(response[i].rating);\n      }\n      $scope.userReviews2 = response;\n      $scope.userAuthor = response[0].name;\n    });\n  }\n  $scope.getUserReviews2(id);\n});\n"]}